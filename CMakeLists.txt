cmake_minimum_required (VERSION 2.8.11)
project (harden C)

set (PROGRAM_NAME  "oscheck")
set (HARDEN_VERSION_MAJOR 0)
set (HARDEN_VERSION_MINOR 1)
set (HARDEN_VERSION_PATCH 0)

set (HARDEN_PASSWORD_MIN_AGE 7)

set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS} -Wall -pedantic -Wextra -std=gnu99")

set(HARDEN_SOURCES exe/harden.c)

find_package(PkgConfig)
pkg_check_modules(KMOD libkmod)
pkg_check_modules(SELINUX libselinux)
pkg_check_modules(RPM rpm)
pkg_check_modules(SYSTEMD libsystemd)
pkg_check_modules(PROCPS REQUIRED libprocps)
if(SYSTEMD_FOUND)
  pkg_check_modules(GIO REQUIRED gio-2.0)
endif()

LIST(APPEND HARDEN_SOURCES lib/src/check.c)
LIST(APPEND HARDEN_SOURCES lib/src/report.c)
LIST(APPEND HARDEN_SOURCES lib/src/util.c)
LIST(APPEND HARDEN_SOURCES lib/src/collector/kernel.c)
LIST(APPEND HARDEN_SOURCES lib/src/collector/files.c)
LIST(APPEND HARDEN_SOURCES lib/src/collector/user.c)
LIST(APPEND HARDEN_SOURCES lib/src/collector/mount.c)
LIST(APPEND HARDEN_SOURCES lib/src/collector/environ.c)
LIST(APPEND HARDEN_SOURCES lib/src/collector/services.c)
LIST(APPEND HARDEN_SOURCES lib/src/collector/grub.c)
LIST(APPEND HARDEN_SOURCES lib/src/collector/cron.c)
LIST(APPEND HARDEN_SOURCES lib/src/collector/yum.c)
LIST(APPEND HARDEN_SOURCES lib/src/collector/process.c)

if(RPM_FOUND)
  set(HAVE_RPM 1)
  LIST(APPEND HARDEN_SOURCES lib/src/collector/rpm.c)
endif()

if(KMOD_FOUND)
  set(HAVE_KMOD 1)
  LIST(APPEND HARDEN_SOURCES lib/src/collector/module.c)
endif()

if(SYSTEMD_FOUND)
  set(HAVE_SYSTEMD 1)
endif()

if(SELINUX_FOUND)
  set(HAVE_SELINUX 1)
  LIST(APPEND HARDEN_SOURCES lib/src/collector/selinux.c)
endif()

configure_file( "${PROJECT_SOURCE_DIR}/lib/config.h.in"     "${PROJECT_SOURCE_DIR}/lib/inc/harden/config.h")
configure_file( "${PROJECT_SOURCE_DIR}/lib/version.h.in"    "${PROJECT_SOURCE_DIR}/lib/inc/harden/version.h")
configure_file( "${PROJECT_SOURCE_DIR}/lib/parameters.h.in" "${PROJECT_SOURCE_DIR}/lib/inc/harden/parameters.h")

include_directories( "${PROJECT_SOURCE_DIR}/lib/src"
  "${PROJECT_SOURCE_DIR}/lib/inc")

add_executable(harden ${HARDEN_SOURCES})
target_link_libraries( harden ${PROCPS_LIBRARIES})

if(SELINUX_FOUND)
  target_link_libraries( harden ${SELINUX_LIBRARIES})
endif()
if(KMOD_FOUND)
  target_link_libraries( harden ${KMOD_LIBRARIES} )
endif()
if(RPM_FOUND)
  target_link_libraries( harden ${RPM_LIBRARIES} )
endif()
if(SYSTEMD_FOUND)
  target_link_libraries( harden ${GIO_LIBRARIES} )
  include_directories( ${GIO_INCLUDE_DIRS} )
endif()
